* wucuo
[[file:wucuo.png]]

[[https://github.com/redguardtoo/wucuo/actions/workflows/test.yml][https://github.com/redguardtoo/wucuo/actions/workflows/test.yml/badge.svg]]
[[http://melpa.org/#/wucuo][file:http://melpa.org/packages/wucuo-badge.svg]]
[[http://stable.melpa.org/#/wucuo][file:http://stable.melpa.org/packages/wucuo-badge.svg]]

Fastest solution to spell check camel case code or plain text

- Fast
- Works out of box
- Support both [[http://aspell.net/][Aspell]] and [[https://hunspell.github.io/][Hunspell]]
- Powerful and easy to set up

Screenshot:

[[file:demo.png]]

[[file:huge-file-demo-nq8.png]]

* Install
Wucuo is uploaded to [[http://melpa.org]]. The best way to install is Emacs package manager.

If using [[https://guix.gnu.org/][GNU Guix]], Wucuo and its dependencies can be installed via =guix install emacs-guix=.

* Setup
Please install either Aspell or Hunspell and the dictionaries at first.

This program does not mess up your Flyspell configuration. It assumes Flyspell is already configured properly.

But if you get some problem on Flyspell configuration, check *sample configuration* in [[Tips]] section.
* Usage
Add below code into =~/.emacs= to enable =wucuo=,
#+begin_src elisp
(add-hook 'prog-mode-hook #'wucuo-start)
(add-hook 'text-mode-hook #'wucuo-start)
#+end_src

The spell checking starts when current buffer is saved.

Please note Wucuo is a complete solution. You should turn off =flyspell-prog-mode= and =flyspell-mode= before using this program.

Flyspell is a packages which Wucuo is based on. So the good news is *your configuration for flyspell still works*.

Flyspell provides two minor modes, =flyspell-prog-mode= and =flyspell-mode= which uses Flyspell API.

This program replaces these two minor modes, using same Flyspell API.

See =wucuo-check-nil-font-face= on how to check plain text (text without font).
* Tips
** Configure Flyspell
Flyspell configuration is shared by =flyspell-prog-mode=, =flyspell-mode=, and =wucuo=.

Even you don't use this program, you still need configure flyspell.

If your existing Flyspell configuration already works, you don't need read this section.

This section is to help users who have problem to setup flyspell.

You could read my article [[https://blog.binchen.org/posts/what-s-the-best-spell-check-set-up-in-emacs.html][What's the best spell check setup in emacs]] and [[https://emacs.stackexchange.com/questions/21378/spell-check-with-multiple-dictionaries/22240#22240][my stackexchange answers on flyspell]] to learn the Flyspell knowledge.

*** aspell configuration sample
Please install command line program Aspell and insert below code into =~/.emacs=,
#+begin_src elisp
(setq ispell-program-name "aspell")
;; You could add extra option "--camel-case" for since Aspell 0.60.8 
;; @see https://github.com/redguardtoo/emacs.d/issues/796
(setq ispell-extra-args '("--sug-mode=ultra" "--lang=en_US" "--run-together" "--run-together-limit=16"))
#+end_src
*** hunspell configuration sample
Please install command line program hunspell and insert below code into =~/.emacs=,
#+begin_src elisp
(setq ispell-program-name "hunspell")
;; reset the hunspell so it STOPS querying locale!
(setq ispell-local-dictionary "myhunspell") ; "myhunspell" is key to lookup in `ispell-local-dictionary-alist`
;; two dictionaries "en_US" and "zh_CN" are used. Feel free to remove "zh_CN"
(setq ispell-local-dictionary-alist
      '(("myhunspell" "[[:alpha:]]" "[^[:alpha:]]" "[']" nil ("-d" "en_US" "zh_CN") nil utf-8)))
;; new variable `ispell-hunspell-dictionary-alist' is defined in Emacs
;; If it's nil, Emacs tries to automatically set up the dictionaries.
(when (boundp 'ispell-hunspell-dictionary-alist)
      (setq ispell-hunspell-dictionary-alist ispell-local-dictionary-alist))
#+end_src
** Spell check file and directory
The function =wucuo-spell-check-file= will spell check one file and report typos.
The function =wucuo-spell-check-directory= will spell check files under one directory and report typos.

Above functions could be used through Emacs CLI (using Aspell),
#+begin_src elisp
emacs -batch -Q -l ~/projs/wucuo/wucuo.el --eval '(let* ((ispell-program-name "aspell") (ispell-extra-args (wucuo-aspell-cli-args t))) (wucuo-spell-check-directory "."))'
#+end_src
** Start mode
The default value of =wucuo-flyspell-start-mode= is "fast".

If =wucuo-flyspell-start-mode= is "fast", =wucuo-start= calls =flyspell-region= to check visible region in current window periodically.

If =wucuo-flyspell-start-mode= is "normal", =wucuo-start= calls =flyspell-buffer= periodically.

The interval of buffer checking or region checking is controlled by =wucuo-update-interval=.

Checking buffer or region only is more efficient than =flyspell-mode=.
** Skip spell checking under certain circumstances

You can define a function in =wucuo-spell-check-buffer-predicate=. If the function returns t, the spell checking of current buffer will continue. If it returns nil, the spell checking is skipped.

Here is sample to skip checking in specified major modes,
#+begin_src elisp
(setq wucuo-spell-check-buffer-predicate
      (lambda ()
        (not (memq major-mode
                   '(dired-mode
                     log-edit-mode
                     compilation-mode
                     help-mode
                     profiler-report-mode
                     speedbar-mode
                     gud-mode
                     calc-mode
                     Info-mode)))))
#+end_src
** Change dictionaries
See =wucuo-aspell-language-to-use= and =wucuo-hunspell-dictionary-base-name=
** Only check words with specified font faces
#+begin_src elisp
(setq wucuo-personal-font-faces-to-check '(font-lock-comment-face))
#+end_src
** Flyspell wrongly mark some word as typo
There are three solutions.
*** Emacs Lisp setup
#+begin_src javascript
(defun my-checker (word)
  "If WORD is typo, return t."
  t)
(setq wucuo-extra-predicate #'my-checker)
#+end_src
*** Create personal dictionary
Aspell, run =M-x wucuo-create-aspell-personal-dictionary=. The plain text dictionary =~/.aspell.en.pws= is created if its option =--lang= is "en" ("en" is default value). 

Hunspell, run =M-x wucuo-create-hunspell-personal-dictionary=. The plain text dictionary =~/.hunspell_en_US= is created if its option =-d= contains "en_US".

Here is my [[https://gist.github.com/redguardtoo/8a232c0aad3b4d712bef1c2e910b8b33][~/.aspell.en.pws]].

Hunspell's personal dictionary is same as aspell.

Please note it's reported that [[https://github.com/redguardtoo/emacs.d/issues/947][the dictionary file should be utf-8 encoded]].
** Speed up checking if aspell is used
#+begin_src elisp
(setq ispell-extra-args "--run-together")
#+end_src
** Ignore major mode's own flyspell predicate
Or if you need replace the default configuration of multiple major modes, you can use below code,
#+begin_src elisp
(setq wucuo-modes-whose-predicate-ignored '("typescript-mode"))
#+end_src
** Detect font face at point
Use =wucuo-current-font-face= to detect font face at point.
** Skip spell checking when buffer or visible region is too big
In =wucuo-flyspell-start-mode= is "normal", =wucuo-spell-check-buffer-max= specifies the maximum size of buffer to check.

In =wucuo-flyspell-start-mode= is "fast", =wucuo-spell-check-region-max= specifies the maximum size of visible region to check.
* Contact me
Report bug at [[https://github.com/redguardtoo/wucuo]].
